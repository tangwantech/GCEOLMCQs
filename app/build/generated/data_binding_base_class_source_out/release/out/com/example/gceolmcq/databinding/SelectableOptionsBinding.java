// Generated by view binder compiler. Do not edit!
package com.example.gceolmcq.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gceolmcq.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SelectableOptionsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cardSelectableOption1;

  @NonNull
  public final CardView cardSelectableOption2;

  @NonNull
  public final CardView cardSelectableOption3;

  @NonNull
  public final CardView cardSelectableOption4;

  @NonNull
  public final LinearLayout layoutOption1;

  @NonNull
  public final LinearLayout layoutOption2;

  @NonNull
  public final LinearLayout layoutOption3;

  @NonNull
  public final LinearLayout layoutOption4;

  @NonNull
  public final TextView tvSelectableOption1;

  @NonNull
  public final TextView tvSelectableOption2;

  @NonNull
  public final TextView tvSelectableOption3;

  @NonNull
  public final TextView tvSelectableOption4;

  private SelectableOptionsBinding(@NonNull LinearLayout rootView,
      @NonNull CardView cardSelectableOption1, @NonNull CardView cardSelectableOption2,
      @NonNull CardView cardSelectableOption3, @NonNull CardView cardSelectableOption4,
      @NonNull LinearLayout layoutOption1, @NonNull LinearLayout layoutOption2,
      @NonNull LinearLayout layoutOption3, @NonNull LinearLayout layoutOption4,
      @NonNull TextView tvSelectableOption1, @NonNull TextView tvSelectableOption2,
      @NonNull TextView tvSelectableOption3, @NonNull TextView tvSelectableOption4) {
    this.rootView = rootView;
    this.cardSelectableOption1 = cardSelectableOption1;
    this.cardSelectableOption2 = cardSelectableOption2;
    this.cardSelectableOption3 = cardSelectableOption3;
    this.cardSelectableOption4 = cardSelectableOption4;
    this.layoutOption1 = layoutOption1;
    this.layoutOption2 = layoutOption2;
    this.layoutOption3 = layoutOption3;
    this.layoutOption4 = layoutOption4;
    this.tvSelectableOption1 = tvSelectableOption1;
    this.tvSelectableOption2 = tvSelectableOption2;
    this.tvSelectableOption3 = tvSelectableOption3;
    this.tvSelectableOption4 = tvSelectableOption4;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SelectableOptionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SelectableOptionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.selectable_options, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SelectableOptionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardSelectableOption1;
      CardView cardSelectableOption1 = ViewBindings.findChildViewById(rootView, id);
      if (cardSelectableOption1 == null) {
        break missingId;
      }

      id = R.id.cardSelectableOption2;
      CardView cardSelectableOption2 = ViewBindings.findChildViewById(rootView, id);
      if (cardSelectableOption2 == null) {
        break missingId;
      }

      id = R.id.cardSelectableOption3;
      CardView cardSelectableOption3 = ViewBindings.findChildViewById(rootView, id);
      if (cardSelectableOption3 == null) {
        break missingId;
      }

      id = R.id.cardSelectableOption4;
      CardView cardSelectableOption4 = ViewBindings.findChildViewById(rootView, id);
      if (cardSelectableOption4 == null) {
        break missingId;
      }

      id = R.id.layoutOption1;
      LinearLayout layoutOption1 = ViewBindings.findChildViewById(rootView, id);
      if (layoutOption1 == null) {
        break missingId;
      }

      id = R.id.layoutOption2;
      LinearLayout layoutOption2 = ViewBindings.findChildViewById(rootView, id);
      if (layoutOption2 == null) {
        break missingId;
      }

      id = R.id.layoutOption3;
      LinearLayout layoutOption3 = ViewBindings.findChildViewById(rootView, id);
      if (layoutOption3 == null) {
        break missingId;
      }

      id = R.id.layoutOption4;
      LinearLayout layoutOption4 = ViewBindings.findChildViewById(rootView, id);
      if (layoutOption4 == null) {
        break missingId;
      }

      id = R.id.tvSelectableOption1;
      TextView tvSelectableOption1 = ViewBindings.findChildViewById(rootView, id);
      if (tvSelectableOption1 == null) {
        break missingId;
      }

      id = R.id.tvSelectableOption2;
      TextView tvSelectableOption2 = ViewBindings.findChildViewById(rootView, id);
      if (tvSelectableOption2 == null) {
        break missingId;
      }

      id = R.id.tvSelectableOption3;
      TextView tvSelectableOption3 = ViewBindings.findChildViewById(rootView, id);
      if (tvSelectableOption3 == null) {
        break missingId;
      }

      id = R.id.tvSelectableOption4;
      TextView tvSelectableOption4 = ViewBindings.findChildViewById(rootView, id);
      if (tvSelectableOption4 == null) {
        break missingId;
      }

      return new SelectableOptionsBinding((LinearLayout) rootView, cardSelectableOption1,
          cardSelectableOption2, cardSelectableOption3, cardSelectableOption4, layoutOption1,
          layoutOption2, layoutOption3, layoutOption4, tvSelectableOption1, tvSelectableOption2,
          tvSelectableOption3, tvSelectableOption4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
