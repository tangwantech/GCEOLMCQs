// Generated by view binder compiler. Do not edit!
package com.example.gceolmcq.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gceolmcq.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PaperInstructionDialogLoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout checkboxLo;

  @NonNull
  public final TextView doNotShow;

  @NonNull
  public final CheckBox instructionCheckBox;

  @NonNull
  public final TextView tvPaperInstruction;

  private PaperInstructionDialogLoBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout checkboxLo, @NonNull TextView doNotShow,
      @NonNull CheckBox instructionCheckBox, @NonNull TextView tvPaperInstruction) {
    this.rootView = rootView;
    this.checkboxLo = checkboxLo;
    this.doNotShow = doNotShow;
    this.instructionCheckBox = instructionCheckBox;
    this.tvPaperInstruction = tvPaperInstruction;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PaperInstructionDialogLoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PaperInstructionDialogLoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.paper_instruction_dialog_lo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PaperInstructionDialogLoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.checkboxLo;
      LinearLayout checkboxLo = ViewBindings.findChildViewById(rootView, id);
      if (checkboxLo == null) {
        break missingId;
      }

      id = R.id.doNotShow;
      TextView doNotShow = ViewBindings.findChildViewById(rootView, id);
      if (doNotShow == null) {
        break missingId;
      }

      id = R.id.instructionCheckBox;
      CheckBox instructionCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (instructionCheckBox == null) {
        break missingId;
      }

      id = R.id.tvPaperInstruction;
      TextView tvPaperInstruction = ViewBindings.findChildViewById(rootView, id);
      if (tvPaperInstruction == null) {
        break missingId;
      }

      return new PaperInstructionDialogLoBinding((LinearLayout) rootView, checkboxLo, doNotShow,
          instructionCheckBox, tvPaperInstruction);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
