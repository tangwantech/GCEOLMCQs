// Generated by view binder compiler. Do not edit!
package com.example.gceolmcq.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gceolmcq.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SectionNavItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout scoreLo;

  @NonNull
  public final LinearLayout sectionNavItemLayout;

  @NonNull
  public final TextView tvSectionNavItem;

  @NonNull
  public final TextView tvSectionNumberOfQuestions;

  @NonNull
  public final TextView tvSectionScore;

  private SectionNavItemBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout scoreLo,
      @NonNull LinearLayout sectionNavItemLayout, @NonNull TextView tvSectionNavItem,
      @NonNull TextView tvSectionNumberOfQuestions, @NonNull TextView tvSectionScore) {
    this.rootView = rootView;
    this.scoreLo = scoreLo;
    this.sectionNavItemLayout = sectionNavItemLayout;
    this.tvSectionNavItem = tvSectionNavItem;
    this.tvSectionNumberOfQuestions = tvSectionNumberOfQuestions;
    this.tvSectionScore = tvSectionScore;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SectionNavItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SectionNavItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.section_nav_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SectionNavItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.scoreLo;
      LinearLayout scoreLo = ViewBindings.findChildViewById(rootView, id);
      if (scoreLo == null) {
        break missingId;
      }

      LinearLayout sectionNavItemLayout = (LinearLayout) rootView;

      id = R.id.tvSectionNavItem;
      TextView tvSectionNavItem = ViewBindings.findChildViewById(rootView, id);
      if (tvSectionNavItem == null) {
        break missingId;
      }

      id = R.id.tvSectionNumberOfQuestions;
      TextView tvSectionNumberOfQuestions = ViewBindings.findChildViewById(rootView, id);
      if (tvSectionNumberOfQuestions == null) {
        break missingId;
      }

      id = R.id.tvSectionScore;
      TextView tvSectionScore = ViewBindings.findChildViewById(rootView, id);
      if (tvSectionScore == null) {
        break missingId;
      }

      return new SectionNavItemBinding((LinearLayout) rootView, scoreLo, sectionNavItemLayout,
          tvSectionNavItem, tvSectionNumberOfQuestions, tvSectionScore);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
