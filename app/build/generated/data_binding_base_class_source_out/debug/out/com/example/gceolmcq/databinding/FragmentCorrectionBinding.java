// Generated by view binder compiler. Do not edit!
package com.example.gceolmcq.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gceolmcq.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCorrectionBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button btnNextSection;

  @NonNull
  public final Button btnRetryCorrection;

  @NonNull
  public final FrameLayout holderRvFragmentCorrection;

  @NonNull
  public final LinearLayout layoutBtnRetryCorrection;

  private FragmentCorrectionBinding(@NonNull FrameLayout rootView, @NonNull Button btnNextSection,
      @NonNull Button btnRetryCorrection, @NonNull FrameLayout holderRvFragmentCorrection,
      @NonNull LinearLayout layoutBtnRetryCorrection) {
    this.rootView = rootView;
    this.btnNextSection = btnNextSection;
    this.btnRetryCorrection = btnRetryCorrection;
    this.holderRvFragmentCorrection = holderRvFragmentCorrection;
    this.layoutBtnRetryCorrection = layoutBtnRetryCorrection;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCorrectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCorrectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_correction, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCorrectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnNextSection;
      Button btnNextSection = ViewBindings.findChildViewById(rootView, id);
      if (btnNextSection == null) {
        break missingId;
      }

      id = R.id.btnRetryCorrection;
      Button btnRetryCorrection = ViewBindings.findChildViewById(rootView, id);
      if (btnRetryCorrection == null) {
        break missingId;
      }

      id = R.id.holderRvFragmentCorrection;
      FrameLayout holderRvFragmentCorrection = ViewBindings.findChildViewById(rootView, id);
      if (holderRvFragmentCorrection == null) {
        break missingId;
      }

      id = R.id.layoutBtnRetryCorrection;
      LinearLayout layoutBtnRetryCorrection = ViewBindings.findChildViewById(rootView, id);
      if (layoutBtnRetryCorrection == null) {
        break missingId;
      }

      return new FragmentCorrectionBinding((FrameLayout) rootView, btnNextSection,
          btnRetryCorrection, holderRvFragmentCorrection, layoutBtnRetryCorrection);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
